-- Script de inicialización para Oracle Database
-- Crear tablas CLIENTES y FACTURAS

-- Conectar a la base de datos pluggable
ALTER SESSION SET CONTAINER = XEPDB1;

-- Crear tabla CLIENTES
CREATE TABLE CLIENTES (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE VARCHAR2(200) NOT NULL,
    IDENTIFICACION VARCHAR2(50) NOT NULL UNIQUE,
    CORREO VARCHAR2(100) NOT NULL,
    DIRECCION VARCHAR2(300),
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ACTIVO NUMBER(1) DEFAULT 1 CHECK (ACTIVO IN (0,1))
);

-- Crear índice en IDENTIFICACION para optimizar búsquedas
CREATE INDEX IDX_CLIENTES_IDENTIFICACION ON CLIENTES(IDENTIFICACION);

-- Crear índice en CORREO para optimizar búsquedas
CREATE INDEX IDX_CLIENTES_CORREO ON CLIENTES(CORREO);

-- Crear tabla FACTURAS
CREATE TABLE FACTURAS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CLIENTE_ID NUMBER NOT NULL,
    FECHA_EMISION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    MONTO_TOTAL NUMBER(10,2) NOT NULL CHECK (MONTO_TOTAL > 0),
    ESTADO VARCHAR2(20) DEFAULT 'PENDIENTE',
    CONSTRAINT FK_FACTURAS_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES(ID)
);

-- Crear índice en FECHA_EMISION para optimizar consultas por fecha
CREATE INDEX IDX_FACTURAS_FECHA_EMISION ON FACTURAS(FECHA_EMISION);

-- Crear índice en CLIENTE_ID para optimizar joins
CREATE INDEX IDX_FACTURAS_CLIENTE_ID ON FACTURAS(CLIENTE_ID);

-- Crear índice compuesto para consultas frecuentes
CREATE INDEX IDX_FACTURAS_CLIENTE_FECHA ON FACTURAS(CLIENTE_ID, FECHA_EMISION);

-- Insertar datos de prueba
INSERT INTO CLIENTES (NOMBRE, IDENTIFICACION, CORREO, DIRECCION) VALUES 
('Juan Pérez', '12345678', 'juan.perez@email.com', 'Calle 123 #45-67, Bogotá');

INSERT INTO CLIENTES (NOMBRE, IDENTIFICACION, CORREO, DIRECCION) VALUES 
('María García', '87654321', 'maria.garcia@email.com', 'Carrera 45 #12-34, Medellín');

INSERT INTO FACTURAS (CLIENTE_ID, MONTO_TOTAL) VALUES (1, 150000.50);
INSERT INTO FACTURAS (CLIENTE_ID, MONTO_TOTAL) VALUES (2, 75000.00);

-- Confirmar transacciones
COMMIT;

-- Mostrar resumen de tablas creadas
SELECT 'CLIENTES' AS TABLA, COUNT(*) AS REGISTROS FROM CLIENTES
UNION ALL
SELECT 'FACTURAS' AS TABLA, COUNT(*) AS REGISTROS FROM FACTURAS;

-- Mostrar estructura de las tablas
DESCRIBE CLIENTES;
DESCRIBE FACTURAS;
